@page "/loginPage"
@inject NavigationManager NavManager

<div class="container">
    <div class="left">
        <div class="header">
            <h2 class="animation a1">Welcome Back</h2>
            <h4 class="animation a2">Log in to your account using username and password</h4>
        </div>
        <br />
        <div class="form">
            <form class="text-center" @onsubmit="LoginHandler">
                <div class="form-floating mb-3 text-black-50  animation a3">
                    <input type="text" class="form-control username animation a3" @bind="_username" placeholder="Username" />
                    <label for="floatingInput">Username</label>
                </div>
                <div class="form-floating mb-3 text-black-50  animation a4">
                    <input type="password" class="form-control password animation a4" @bind="_password" placeholder="Password" />
                    <label for="floatingPassword">Password</label>
                </div>
                @if (!string.IsNullOrEmpty(_errorMessage))
                {
                    <AlertMessage Type="danger" Message="@_errorMessage" />
                }

                <button class="animation a6" type="submit">Login</button>
            </form>
        </div>
    </div>
    <div class="right"></div>
</div>

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private bool _showDefaultCredentials { get; set; }
    private string _username { get; set; }
    private string _password { get; set; }
    private string _errorMessage = "";

    protected override void OnInitialized()
    {
        try
        {
            var user = UsersService.Login(UsersService.SeedUsername, UsersService.SeedPassword);
        }
        catch { }

        _globalState.CurrentUser = null;
        _errorMessage = "";
    }

    private void LoginHandler()
    {
        try
        {
            _errorMessage = "";
            //saving the current users details in _globalState.CurrentUser
            _globalState.CurrentUser = UsersService.Login(_username, _password);
            if (_globalState.CurrentUser != null)
            {
                if (_globalState.CurrentUser.Role == Role.Admin)
                {
                    //store Login Details of the current admin in JSON file
                    AdminLoginService.Create(_globalState.CurrentUser.Id, _globalState.CurrentUser.Username);
                }

                //when login successful, display inventory page
                NavManager.NavigateTo("/inventory");
            }
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
            Console.WriteLine(e);
        }
    }
}